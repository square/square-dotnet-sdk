name: Legacy CI

on:
  push:
    paths:
      - 'legacy/**'
    branches:
      - '**'
    tags:
      - '*Legacy*'  # Only run for tags containing "Legacy"
  pull_request:
    paths:
      - 'legacy/**'

env:
  CI: true
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_NOLOGO: true
  MSBUILDTERMINALLOGGER: off

jobs:
  legacy-ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.x

      - name: Install tools
        run: dotnet tool restore

      - name: Restore dependencies
        run: dotnet restore legacy/Square.Legacy.sln

      - name: Build release
        id: build
        run: dotnet build legacy/Square.Legacy.sln -c Release /p:ContinuousIntegrationBuild=true

      - name: Run Tests
        run: dotnet test legacy/Square.Legacy.sln --no-restore --no-build -c Release /p:ContinuousIntegrationBuild=true
        continue-on-error: true
        env:
          SQUARE_ACCESS_TOKEN: ${{ secrets.TEST_SQUARE_TOKEN }}
          SQUARE_ENVIRONMENT: sandbox

      - name: Publish to nuget.org
        # Now we only need to check if it's a tag push and the build succeeded
        if: github.event_name == 'push' && contains(github.ref, 'refs/tags/') && steps.build.outcome == 'success'
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
        run: |
          dotnet pack legacy/Square.Legacy.sln --no-build --no-restore -c Release -o dist
          dotnet nuget push dist/*.nupkg --api-key $NUGET_API_KEY --source "nuget.org"