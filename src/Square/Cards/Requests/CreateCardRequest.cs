using System.Text.Json.Serialization;
using Square;
using Square.Core;

namespace Square.Cards;

public record CreateCardRequest
{
    /// <summary>
    /// A unique string that identifies this CreateCard request. Keys can be
    /// any valid string and must be unique for every request.
    ///
    /// Max: 45 characters
    ///
    /// See [Idempotency keys](https://developer.squareup.com/docs/build-basics/common-api-patterns/idempotency) for more information.
    /// </summary>
    [JsonPropertyName("idempotency_key")]
    public required string IdempotencyKey { get; set; }

    /// <summary>
    /// The ID of the source which represents the card information to be stored. This can be a card nonce or a payment id.
    /// </summary>
    [JsonPropertyName("source_id")]
    public required string SourceId { get; set; }

    /// <summary>
    /// An identifying token generated by [Payments.verifyBuyer()](https://developer.squareup.com/reference/sdks/web/payments/objects/Payments#Payments.verifyBuyer).
    /// Verification tokens encapsulate customer device information and 3-D Secure
    /// challenge results to indicate that Square has verified the buyer identity.
    ///
    /// See the [SCA Overview](https://developer.squareup.com/docs/sca-overview).
    /// </summary>
    [JsonPropertyName("verification_token")]
    public string? VerificationToken { get; set; }

    /// <summary>
    /// Payment details associated with the card to be stored.
    /// </summary>
    [JsonPropertyName("card")]
    public required Card Card { get; set; }

    public override string ToString()
    {
        return JsonUtils.Serialize(this);
    }
}
