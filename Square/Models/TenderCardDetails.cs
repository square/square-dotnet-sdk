using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using APIMatic.Core.Utilities.Converters;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Square;
using Square.Utilities;

namespace Square.Models
{
    /// <summary>
    /// TenderCardDetails.
    /// </summary>
    public class TenderCardDetails
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TenderCardDetails"/> class.
        /// </summary>
        /// <param name="status">status.</param>
        /// <param name="card">card.</param>
        /// <param name="entryMethod">entry_method.</param>
        public TenderCardDetails(
            string status = null,
            Models.Card card = null,
            string entryMethod = null)
        {
            this.Status = status;
            this.Card = card;
            this.EntryMethod = entryMethod;
        }

        /// <summary>
        /// Indicates the card transaction's current status.
        /// </summary>
        [JsonProperty("status", NullValueHandling = NullValueHandling.Ignore)]
        public string Status { get; }

        /// <summary>
        /// Represents the payment details of a card to be used for payments. These
        /// details are determined by the payment token generated by Web Payments SDK.
        /// </summary>
        [JsonProperty("card", NullValueHandling = NullValueHandling.Ignore)]
        public Models.Card Card { get; }

        /// <summary>
        /// Indicates the method used to enter the card's details.
        /// </summary>
        [JsonProperty("entry_method", NullValueHandling = NullValueHandling.Ignore)]
        public string EntryMethod { get; }

        /// <inheritdoc/>
        public override string ToString()
        {
            var toStringOutput = new List<string>();
            this.ToString(toStringOutput);
            return $"TenderCardDetails : ({string.Join(", ", toStringOutput)})";
        }

        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            if (obj is null) return false;
            if (ReferenceEquals(this, obj)) return true;

            return obj is TenderCardDetails other &&
                (this.Status == null && other.Status == null ||
                 this.Status?.Equals(other.Status) == true) &&
                (this.Card == null && other.Card == null ||
                 this.Card?.Equals(other.Card) == true) &&
                (this.EntryMethod == null && other.EntryMethod == null ||
                 this.EntryMethod?.Equals(other.EntryMethod) == true);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            var hashCode = -1919501986;
            hashCode = HashCode.Combine(hashCode, this.Status, this.Card, this.EntryMethod);

            return hashCode;
        }

        /// <summary>
        /// ToString overload.
        /// </summary>
        /// <param name="toStringOutput">List of strings.</param>
        protected void ToString(List<string> toStringOutput)
        {
            toStringOutput.Add($"this.Status = {(this.Status == null ? "null" : this.Status.ToString())}");
            toStringOutput.Add($"this.Card = {(this.Card == null ? "null" : this.Card.ToString())}");
            toStringOutput.Add($"this.EntryMethod = {(this.EntryMethod == null ? "null" : this.EntryMethod.ToString())}");
        }

        /// <summary>
        /// Converts to builder object.
        /// </summary>
        /// <returns> Builder. </returns>
        public Builder ToBuilder()
        {
            var builder = new Builder()
                .Status(this.Status)
                .Card(this.Card)
                .EntryMethod(this.EntryMethod);
            return builder;
        }

        /// <summary>
        /// Builder class.
        /// </summary>
        public class Builder
        {
            private string status;
            private Models.Card card;
            private string entryMethod;

             /// <summary>
             /// Status.
             /// </summary>
             /// <param name="status"> status. </param>
             /// <returns> Builder. </returns>
            public Builder Status(string status)
            {
                this.status = status;
                return this;
            }

             /// <summary>
             /// Card.
             /// </summary>
             /// <param name="card"> card. </param>
             /// <returns> Builder. </returns>
            public Builder Card(Models.Card card)
            {
                this.card = card;
                return this;
            }

             /// <summary>
             /// EntryMethod.
             /// </summary>
             /// <param name="entryMethod"> entryMethod. </param>
             /// <returns> Builder. </returns>
            public Builder EntryMethod(string entryMethod)
            {
                this.entryMethod = entryMethod;
                return this;
            }

            /// <summary>
            /// Builds class object.
            /// </summary>
            /// <returns> TenderCardDetails. </returns>
            public TenderCardDetails Build()
            {
                return new TenderCardDetails(
                    this.status,
                    this.card,
                    this.entryMethod);
            }
        }
    }
}