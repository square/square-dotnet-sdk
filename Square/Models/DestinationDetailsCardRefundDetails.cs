namespace Square.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.IO;
    using System.Linq;
    using System.Text;
    using System.Threading.Tasks;
    using APIMatic.Core.Utilities.Converters;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using Square;
    using Square.Utilities;

    /// <summary>
    /// DestinationDetailsCardRefundDetails.
    /// </summary>
    public class DestinationDetailsCardRefundDetails
    {
        private readonly Dictionary<string, bool> shouldSerialize;
        /// <summary>
        /// Initializes a new instance of the <see cref="DestinationDetailsCardRefundDetails"/> class.
        /// </summary>
        /// <param name="card">card.</param>
        /// <param name="entryMethod">entry_method.</param>
        public DestinationDetailsCardRefundDetails(
            Models.Card card = null,
            string entryMethod = null)
        {
            shouldSerialize = new Dictionary<string, bool>
            {
                { "entry_method", false }
            };

            this.Card = card;
            if (entryMethod != null)
            {
                shouldSerialize["entry_method"] = true;
                this.EntryMethod = entryMethod;
            }

        }
        internal DestinationDetailsCardRefundDetails(Dictionary<string, bool> shouldSerialize,
            Models.Card card = null,
            string entryMethod = null)
        {
            this.shouldSerialize = shouldSerialize;
            Card = card;
            EntryMethod = entryMethod;
        }

        /// <summary>
        /// Represents the payment details of a card to be used for payments. These
        /// details are determined by the payment token generated by Web Payments SDK.
        /// </summary>
        [JsonProperty("card", NullValueHandling = NullValueHandling.Ignore)]
        public Models.Card Card { get; }

        /// <summary>
        /// The method used to enter the card's details for the refund. The method can be
        /// `KEYED`, `SWIPED`, `EMV`, `ON_FILE`, or `CONTACTLESS`.
        /// </summary>
        [JsonProperty("entry_method")]
        public string EntryMethod { get; }

        /// <inheritdoc/>
        public override string ToString()
        {
            var toStringOutput = new List<string>();

            this.ToString(toStringOutput);

            return $"DestinationDetailsCardRefundDetails : ({string.Join(", ", toStringOutput)})";
        }

        /// <summary>
        /// Checks if the field should be serialized or not.
        /// </summary>
        /// <returns>A boolean weather the field should be serialized or not.</returns>
        public bool ShouldSerializeEntryMethod()
        {
            return this.shouldSerialize["entry_method"];
        }

        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            if (obj == null)
            {
                return false;
            }

            if (obj == this)
            {
                return true;
            }
            return obj is DestinationDetailsCardRefundDetails other &&                ((this.Card == null && other.Card == null) || (this.Card?.Equals(other.Card) == true)) &&
                ((this.EntryMethod == null && other.EntryMethod == null) || (this.EntryMethod?.Equals(other.EntryMethod) == true));
        }
        
        /// <inheritdoc/>
        public override int GetHashCode()
        {
            int hashCode = -862425387;
            hashCode = HashCode.Combine(this.Card, this.EntryMethod);

            return hashCode;
        }
        /// <summary>
        /// ToString overload.
        /// </summary>
        /// <param name="toStringOutput">List of strings.</param>
        protected void ToString(List<string> toStringOutput)
        {
            toStringOutput.Add($"this.Card = {(this.Card == null ? "null" : this.Card.ToString())}");
            toStringOutput.Add($"this.EntryMethod = {(this.EntryMethod == null ? "null" : this.EntryMethod)}");
        }

        /// <summary>
        /// Converts to builder object.
        /// </summary>
        /// <returns> Builder. </returns>
        public Builder ToBuilder()
        {
            var builder = new Builder()
                .Card(this.Card)
                .EntryMethod(this.EntryMethod);
            return builder;
        }

        /// <summary>
        /// Builder class.
        /// </summary>
        public class Builder
        {
            private Dictionary<string, bool> shouldSerialize = new Dictionary<string, bool>
            {
                { "entry_method", false },
            };

            private Models.Card card;
            private string entryMethod;

             /// <summary>
             /// Card.
             /// </summary>
             /// <param name="card"> card. </param>
             /// <returns> Builder. </returns>
            public Builder Card(Models.Card card)
            {
                this.card = card;
                return this;
            }

             /// <summary>
             /// EntryMethod.
             /// </summary>
             /// <param name="entryMethod"> entryMethod. </param>
             /// <returns> Builder. </returns>
            public Builder EntryMethod(string entryMethod)
            {
                shouldSerialize["entry_method"] = true;
                this.entryMethod = entryMethod;
                return this;
            }

            /// <summary>
            /// Marks the field to not be serailized.
            /// </summary>
            public void UnsetEntryMethod()
            {
                this.shouldSerialize["entry_method"] = false;
            }


            /// <summary>
            /// Builds class object.
            /// </summary>
            /// <returns> DestinationDetailsCardRefundDetails. </returns>
            public DestinationDetailsCardRefundDetails Build()
            {
                return new DestinationDetailsCardRefundDetails(shouldSerialize,
                    this.card,
                    this.entryMethod);
            }
        }
    }
}