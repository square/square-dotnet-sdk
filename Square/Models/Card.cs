using System;
using System.IO;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Square;
using Square.Utilities;

namespace Square.Models
{
    public class Card 
    {
        public Card(string id = null,
            string cardBrand = null,
            string last4 = null,
            long? expMonth = null,
            long? expYear = null,
            string cardholderName = null,
            Models.Address billingAddress = null,
            string fingerprint = null,
            string bin = null)
        {
            Id = id;
            CardBrand = cardBrand;
            Last4 = last4;
            ExpMonth = expMonth;
            ExpYear = expYear;
            CardholderName = cardholderName;
            BillingAddress = billingAddress;
            Fingerprint = fingerprint;
            Bin = bin;
        }

        /// <summary>
        /// Unique ID for this card. Generated by Square.
        /// </summary>
        [JsonProperty("id")]
        public string Id { get; }

        /// <summary>
        /// Indicates a card's brand, such as `VISA` or `MASTERCARD`.
        /// </summary>
        [JsonProperty("card_brand")]
        public string CardBrand { get; }

        /// <summary>
        /// The last 4 digits of the card number.
        /// </summary>
        [JsonProperty("last_4")]
        public string Last4 { get; }

        /// <summary>
        /// The expiration month of the associated card as an integer between 1 and 12.
        /// </summary>
        [JsonProperty("exp_month")]
        public long? ExpMonth { get; }

        /// <summary>
        /// The four-digit year of the card's expiration date.
        /// </summary>
        [JsonProperty("exp_year")]
        public long? ExpYear { get; }

        /// <summary>
        /// The name of the cardholder.
        /// </summary>
        [JsonProperty("cardholder_name")]
        public string CardholderName { get; }

        /// <summary>
        /// Represents a physical address.
        /// </summary>
        [JsonProperty("billing_address")]
        public Models.Address BillingAddress { get; }

        /// <summary>
        /// __Not currently set.__ Intended as a Square-assigned identifier, based 
        /// on the card number, to identify the card across multiple locations within a
        /// single application.
        /// </summary>
        [JsonProperty("fingerprint")]
        public string Fingerprint { get; }

        /// <summary>
        /// The first six digits of the card number, known as the Bank Identification Number (BIN). Only the Payments API
        /// returns this field.
        /// </summary>
        [JsonProperty("bin")]
        public string Bin { get; }

        public Builder ToBuilder()
        {
            var builder = new Builder()
                .Id(Id)
                .CardBrand(CardBrand)
                .Last4(Last4)
                .ExpMonth(ExpMonth)
                .ExpYear(ExpYear)
                .CardholderName(CardholderName)
                .BillingAddress(BillingAddress)
                .Fingerprint(Fingerprint)
                .Bin(Bin);
            return builder;
        }

        public class Builder
        {
            private string id;
            private string cardBrand;
            private string last4;
            private long? expMonth;
            private long? expYear;
            private string cardholderName;
            private Models.Address billingAddress;
            private string fingerprint;
            private string bin;

            public Builder() { }
            public Builder Id(string value)
            {
                id = value;
                return this;
            }

            public Builder CardBrand(string value)
            {
                cardBrand = value;
                return this;
            }

            public Builder Last4(string value)
            {
                last4 = value;
                return this;
            }

            public Builder ExpMonth(long? value)
            {
                expMonth = value;
                return this;
            }

            public Builder ExpYear(long? value)
            {
                expYear = value;
                return this;
            }

            public Builder CardholderName(string value)
            {
                cardholderName = value;
                return this;
            }

            public Builder BillingAddress(Models.Address value)
            {
                billingAddress = value;
                return this;
            }

            public Builder Fingerprint(string value)
            {
                fingerprint = value;
                return this;
            }

            public Builder Bin(string value)
            {
                bin = value;
                return this;
            }

            public Card Build()
            {
                return new Card(id,
                    cardBrand,
                    last4,
                    expMonth,
                    expYear,
                    cardholderName,
                    billingAddress,
                    fingerprint,
                    bin);
            }
        }
    }
}